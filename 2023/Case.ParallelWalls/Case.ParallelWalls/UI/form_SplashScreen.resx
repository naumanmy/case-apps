<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALEAAAAwCAYAAABexZu4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAX
        EQAAFxEByibzPwAAAAd0SU1FB9sIEwUsB2dvyRoAAAAHdEVYdEF1dGhvcgCprsxIAAAADHRFWHREZXNj
        cmlwdGlvbgATCSEjAAAACnRFWHRDb3B5cmlnaHQArA/MOgAAAAl0RVh0U29mdHdhcmUAXXD/OgAAAAd0
        RVh0U291cmNlAPX/g+sAAAAIdEVYdENvbW1lbnQA9syWvwAAAAZ0RVh0VGl0bGUAqO7SJwAAHVJJREFU
        eF7tXQlYjWn7/1BpJaREkkRksqQoxESEiWTJvi9jGQzDDDOWZIbB8A2yztiyjGns24SoSIm0mpQtJVJp
        J9ny/91dc7pOp/uc931PMf/vumau65fm9D73+yz38ruf7fzn/fv3/+Jf/E+D/bAq8O7dO+3CwsK6qamp
        zW7dutU+NDS0/+nTp8cfOHBgFjBbhmPHjk0OCgoaFhcXZ5+SkmJFZUpKSjQ5mVUNek9RUVHtR48eWf71
        11/tL1++POTs2bNjf/vtt5kHDx6cSb8HBwd7xcbG2j98+LB5fn6+EcpocLKkAH2j9ebNG13ub1IBWRrP
        nz+vk5aWZpGYmPhJZGRkd/Tn8HPnzo329/efvn///tnUlj///HNMYGDgyPDw8F4Yj3bJycktnj17Zvr2
        7VuqRzVFuVWF169f69F7Hjx4YB0TE2OPPh4UEBAw+vfff59GdUMdp1Fd0c8Db9682enu3bs2mZmZjV69
        eqXHyePAfqgmqqHCWjk5OeaXLl0a5O3tvd3DwyOkXbt2iY0bN86qVavWKw0NjffVq1cvhxo1arzX1dV9
        26hRo+w2bdok9e/fP+Snn35aExUV1QMKRgpdpR1M8iC3Dgay67Zt25Z5eXkF2tnZJZibm2caGBi80dTU
        LKsb/a6np/e2QYMGuba2tnc/++yzy6jbahhcN1J+obrR36EkNV6+fKmdm5vbmN4Jw525cOHCXT/++OPP
        +FyyIpNMDLAWBroFBt/Lx8fHF/18yd7e/lazZs0e169fvxD9+U5LS6u0b+Xboq2tXWJoaFhM49G6det7
        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
        /wGzKmJ5332wygAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Parallize Walls will align a target wall to a reference object using the midpoint of the centerline of the target wall.  

First Selection:        Detail Line, Model Line or Wall element.
Second Selection:   Target Wall element. 

Note: This dialog will never appear again unless there is a version update.</value>
  </data>
</root>